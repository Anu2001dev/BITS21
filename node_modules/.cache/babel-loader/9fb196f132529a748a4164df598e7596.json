{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/chamindu/Desktop/BITS21/src/Components/Tasks/TaskCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { unmountComponentAtNode, render } from \"react-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CodeIcon from '@material-ui/icons/Code';\nimport BrushIcon from '@material-ui/icons/Brush';\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\nimport taskDetails from '../../Data/tasks.json';\nimport theme from '../../theme';\nimport { Link } from 'react-router-dom';\nimport { render as renderelement } from '@testing-library/react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    width: '600px',\n    height: '200px',\n    marginLeft: '100px',\n    marginTop: '20px',\n    backgroundColor: '#183d5d',\n    color: '#fff',\n    borderRadius: '20px'\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  content: {\n    flex: '1 0 auto'\n  },\n  cover: {\n    width: 151\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  },\n  button: {\n    marginLeft: '10px',\n    marginBottom: '10px',\n    backgroundColor: '#1269ff',\n    color: '#fefefe',\n    transition: '0.5s ease',\n    '&:hover': {\n      backgroundColor: '#f587dc',\n      color: '#FFF'\n    },\n    color: '#00000'\n  },\n  catogery: {\n    marginLeft: '230px'\n  }\n}));\nexport default function TaskCard() {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState('All');\n  const [data, setData] = useState(taskDetails);\n\n  const handleChange = event => {\n    setValue(event.target.value);\n    let result = taskDetails;\n    setData(result.filter(function (obj, index) {\n      return obj.catogery === event.target.value;\n    }));\n\n    if (event.target.value == \"All\") {\n      setData(taskDetails);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"eee\",\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Filter Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        \"aria-label\": \"tasks\",\n        name: \"filter\",\n        value: value,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"All\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 48\n          }, this),\n          label: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"Code\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 49\n          }, this),\n          label: \"Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"Design\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 51\n          }, this),\n          label: \"Design\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"Explore\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 53\n          }, this),\n          label: \"Explore\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), data.map((tasks, index) => /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h5\",\n            variant: \"h5\",\n            children: [tasks.taskName, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.catogery,\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: tasks.catogery,\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": tasks.catogery,\n                  color: \"secondary\",\n                  children: (() => {\n                    switch (tasks.catogery) {\n                      case \"Code\":\n                        return /*#__PURE__*/_jsxDEV(CodeIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 113,\n                          columnNumber: 33\n                        }, this);\n\n                      case \"Design\":\n                        return /*#__PURE__*/_jsxDEV(BrushIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 114,\n                          columnNumber: 33\n                        }, this);\n\n                      case \"Explore\":\n                        return /*#__PURE__*/_jsxDEV(FindInPageIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 115,\n                          columnNumber: 35\n                        }, this);\n                    }\n                  })()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            color: theme.text.secondary.main,\n            className: classes.cat,\n            children: tasks.shortDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.controls,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: Link,\n            to: `/task/${tasks.id}`,\n            className: classes.button,\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskCard, \"aT4MSv8v5Kua9IhByHOrsidLkj4=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = TaskCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"sources":["/home/chamindu/Desktop/BITS21/src/Components/Tasks/TaskCard.js"],"names":["React","Component","useState","unmountComponentAtNode","render","makeStyles","useTheme","Card","CardContent","CardMedia","Typography","Button","Avatar","IconButton","Tooltip","CodeIcon","BrushIcon","FindInPageIcon","taskDetails","theme","Link","renderelement","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","useStyles","root","display","width","height","marginLeft","marginTop","backgroundColor","color","borderRadius","details","flexDirection","content","flex","cover","controls","alignItems","paddingLeft","spacing","paddingBottom","button","marginBottom","transition","catogery","TaskCard","classes","value","setValue","data","setData","handleChange","event","target","result","filter","obj","index","map","tasks","taskName","text","secondary","main","cat","shortDescription","id"],"mappings":"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","sourcesContent":["import React, { Component, useState }  from 'react';\nimport { unmountComponentAtNode, render } from \"react-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CodeIcon from '@material-ui/icons/Code';\nimport BrushIcon from '@material-ui/icons/Brush';\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\nimport taskDetails from '../../Data/tasks.json'\nimport theme from '../../theme'\nimport { Link } from 'react-router-dom';\nimport { render as renderelement } from '@testing-library/react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    width: '600px',\n    height: '200px',\n    marginLeft: '100px',\n    marginTop: '20px',\n    backgroundColor: '#183d5d',\n    color: '#fff',\n    borderRadius: '20px',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  cover: {\n    width: 151,\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n\n  button: {\n    marginLeft: '10px',\n    marginBottom: '10px',\n    backgroundColor: '#1269ff',\n    color: '#fefefe',\n    transition: '0.5s ease',\n    '&:hover': {\n      backgroundColor: '#f587dc',\n      color: '#FFF',\n  },\n  color:'#00000'\n  },\n\n  catogery: {\n    marginLeft: '230px'\n  }\n  \n\n}));\n\nexport default function TaskCard() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState('All');\n  const [data, setData] = useState(taskDetails)\n\n  const handleChange = (event) => {\n    \n    setValue(event.target.value);\n     let result = taskDetails\n     setData(result.filter(function(obj, index){\n      return obj.catogery===event.target.value;})) \n  ;\n  if (event.target.value == \"All\") {\n    setData(taskDetails) \n  }\n}\n\n  return (\n    <div className='eee'>\n      <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Filter Tasks</FormLabel>\n      <RadioGroup aria-label=\"tasks\" name=\"filter\" value={value} onChange={handleChange}>\n        <FormControlLabel value=\"All\" control={<Radio />} label=\"All\" />\n        <FormControlLabel value=\"Code\" control={<Radio />} label=\"Code\" />\n        <FormControlLabel value=\"Design\" control={<Radio />} label=\"Design\" />\n        <FormControlLabel value=\"Explore\"  control={<Radio />} label=\"Explore\" />\n      </RadioGroup>\n    </FormControl>\n      {data.map((tasks, index) => (\n\n    <Card className={classes.root} color=\"primary\"  key={index}>\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography component=\"h5\" variant=\"h5\">\n            {tasks.taskName}\n            <span className={classes.catogery}>\n            <Tooltip title={tasks.catogery}>\n              <IconButton aria-label={tasks.catogery} color='secondary'>\n         {(() => {\n        switch (tasks.catogery) {\n          case \"Code\":   return <CodeIcon />;\n          case \"Design\": return <BrushIcon />;\n          case \"Explore\":  return <FindInPageIcon />;\n        }\n      })()}\n          </IconButton>\n          </Tooltip>\n          </span>\n          </Typography>\n          <Typography variant=\"subtitle1\"  color={theme.text.secondary.main} className={classes.cat} >\n            {tasks.shortDescription}\n          </Typography>\n        </CardContent>\n        \n        <div className={classes.controls}>\n        <Button variant=\"contained\" component={Link} to={`/task/${tasks.id}`} className={classes.button}>\n          View\n        </Button>\n        \n        </div>\n      </div>\n    </Card>\n    ))}\n    </div>\n    \n  );\n}"]},"metadata":{},"sourceType":"module"}