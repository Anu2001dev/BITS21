{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/chamindu/Desktop/BITS21/src/Components/Tasks/TaskCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CodeIcon from '@material-ui/icons/Code';\nimport GestureIcon from '@material-ui/icons/Gesture';\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\nimport * as taskDetails from '../../Data/tasks.json';\nimport theme from '../../theme';\nimport { Link } from 'react-router-dom';\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    width: '600px',\n    height: '200px',\n    marginLeft: '100px',\n    marginTop: '20px',\n    background: 'linear-gradient(329deg, rgb(19 15 62) 0%, rgba(28,56,164,1) 100%)',\n    color: '#fff',\n    borderRadius: '20px'\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  content: {\n    flex: '1 0 auto'\n  },\n  cover: {\n    width: 151\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  },\n  button: {\n    marginLeft: '10px',\n    marginBottom: '10px',\n    background: 'linear-gradient(329deg, rgba(24,77,208,1) 0%, rgba(34,208,215,1) 100%)',\n    color: '#fefefe',\n    transition: '0.5s ease',\n    '&:hover': {\n      background: 'linear-gradient(129deg, rgba(24,77,208,1) 0%, rgba(34,208,215,1) 100%)',\n      color: '#FFF'\n    },\n    color: '#00000'\n  },\n  catogery: {\n    marginLeft: '230px'\n  }\n}));\nexport default function TaskCard() {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  {\n    /*console.log(taskDetails)\n    function code() {\n     var taskDetails = taskDetails.filter(function(obj, index){\n       return obj.catogery==='Code';\n     })\n     console.log(taskDetails)\n    }\n    function design() {\n     var taskDetails = taskDetails.filter(function(obj, index){\n       return obj.catogery==='Design';\n     })\n     console.log(taskDetails)\n    }\n    function explore() {\n     var taskDetails = taskDetails.filter(function(obj, index){\n       return obj.catogery==='Explore';\n     })\n     console.log(taskDetails)\n    }\n    */\n  }\n  console.log(taskDetails);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Filter Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Filter Design\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Filter Explore\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), taskDetails.map((tasks, index) => /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h5\",\n            variant: \"h5\",\n            children: [tasks.taskName, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.catogery,\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: tasks.catogery,\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": tasks.catogery,\n                  color: \"secondary\",\n                  children: (() => {\n                    switch (tasks.catogery) {\n                      case \"Code\":\n                        return /*#__PURE__*/_jsxDEV(CodeIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 113,\n                          columnNumber: 33\n                        }, this);\n\n                      case \"Design\":\n                        return /*#__PURE__*/_jsxDEV(GestureIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 114,\n                          columnNumber: 33\n                        }, this);\n\n                      case \"Explore\":\n                        return /*#__PURE__*/_jsxDEV(FindInPageIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 115,\n                          columnNumber: 35\n                        }, this);\n                    }\n                  })()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            color: theme.text.secondary.main,\n            className: classes.cat,\n            children: tasks.shortDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.controls,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: Link,\n            to: `/task/${tasks.id}`,\n            className: classes.button,\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskCard, \"VtevrTi9kvKTG+vqc/SYVHiEGOM=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = TaskCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"sources":["/home/chamindu/Desktop/BITS21/src/Components/Tasks/TaskCard.js"],"names":["React","makeStyles","useTheme","Card","CardContent","CardMedia","Typography","Button","Avatar","IconButton","Tooltip","CodeIcon","GestureIcon","FindInPageIcon","taskDetails","theme","Link","useStyles","root","display","width","height","marginLeft","marginTop","background","color","borderRadius","details","flexDirection","content","flex","cover","controls","alignItems","paddingLeft","spacing","paddingBottom","button","marginBottom","transition","catogery","TaskCard","classes","console","log","map","tasks","index","taskName","text","secondary","main","cat","shortDescription","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CodeIcon from '@material-ui/icons/Code';\nimport GestureIcon from '@material-ui/icons/Gesture';\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\nimport * as taskDetails from '../../Data/tasks.json'\nimport theme from '../../theme'\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    width: '600px',\n    height: '200px',\n    marginLeft: '100px',\n    marginTop: '20px',\n    background: 'linear-gradient(329deg, rgb(19 15 62) 0%, rgba(28,56,164,1) 100%)',\n    color: '#fff',\n    borderRadius: '20px',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  cover: {\n    width: 151,\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n\n  button: {\n    marginLeft: '10px',\n    marginBottom: '10px',\n    background: 'linear-gradient(329deg, rgba(24,77,208,1) 0%, rgba(34,208,215,1) 100%)',\n    color: '#fefefe',\n    transition: '0.5s ease',\n    '&:hover': {\n      background: 'linear-gradient(129deg, rgba(24,77,208,1) 0%, rgba(34,208,215,1) 100%)',\n      color: '#FFF',\n  },\n  color:'#00000'\n  },\n\n  catogery: {\n    marginLeft: '230px'\n  }\n  \n\n}));\n\nexport default function TaskCard() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  {/*console.log(taskDetails)\n\n  function code() {\n    var taskDetails = taskDetails.filter(function(obj, index){\n      return obj.catogery==='Code';\n    })\n    console.log(taskDetails)\n  }\n\n  function design() {\n    var taskDetails = taskDetails.filter(function(obj, index){\n      return obj.catogery==='Design';\n    })\n    console.log(taskDetails)\n  }\n\n  function explore() {\n    var taskDetails = taskDetails.filter(function(obj, index){\n      return obj.catogery==='Explore';\n    })\n    console.log(taskDetails)\n  }\n*/}\n\nconsole.log(taskDetails)\n\n\n  return (\n    <div>\n      <button >Filter Code</button>\n      <button >Filter Design</button>\n      <button >Filter Explore</button>\n      {taskDetails.map((tasks, index) => (\n\n    <Card className={classes.root} color=\"primary\"  key={index}>\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography component=\"h5\" variant=\"h5\">\n            {tasks.taskName}\n            <span className={classes.catogery}>\n            <Tooltip title={tasks.catogery}>\n              <IconButton aria-label={tasks.catogery} color='secondary'>\n         {(() => {\n        switch (tasks.catogery) {\n          case \"Code\":   return <CodeIcon />;\n          case \"Design\": return <GestureIcon />;\n          case \"Explore\":  return <FindInPageIcon />;\n        }\n      })()}\n          </IconButton>\n          </Tooltip>\n          </span>\n          </Typography>\n          <Typography variant=\"subtitle1\"  color={theme.text.secondary.main} className={classes.cat} >\n            {tasks.shortDescription}\n          </Typography>\n        </CardContent>\n        \n        <div className={classes.controls}>\n        <Button variant=\"contained\" component={Link} to={`/task/${tasks.id}`} className={classes.button}>\n          View\n        </Button>\n        \n        </div>\n      </div>\n    </Card>\n    ))}\n    </div>\n    \n  );\n}\n"]},"metadata":{},"sourceType":"module"}