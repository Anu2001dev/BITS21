{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { functions } from \"firebase\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD6zSLe_Bw-dlV28EMG3kJuY0ctrW1y2-I\",\n  authDomain: \"bits-e46c5.firebaseapp.com\",\n  projectId: \"bits-e46c5\",\n  storageBucket: \"bits-e46c5.appspot.com\",\n  messagingSenderId: \"959583743012\",\n  appId: \"1:959583743012:web:1a9372854ff547559ebcb1\",\n  measurementId: \"G-GCBH9WMNWV\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider);\n};\nexport const generateUserDocument = async (user, additionalData) => {\n  if (!user) return;\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      email,\n      displayName,\n      photoURL\n    } = user;\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        ...additionalData\n      });\n    } catch (error) {\n      console.error(\"Error creating user document\", error);\n    }\n  }\n\n  return getUserDocument(user.uid);\n};\n\nconst getUserDocument = async uid => {\n  if (!uid) return null;\n\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n    return {\n      uid,\n      ...userDocument.data()\n    };\n  } catch (error) {\n    console.error(\"Error fetching user\", error);\n  }\n};","map":{"version":3,"sources":["/home/chamindu/Desktop/BITS21/src/Auth/firebase.js"],"names":["firebase","functions","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","generateUserDocument","user","additionalData","userRef","doc","uid","snapshot","get","exists","email","displayName","photoURL","set","error","console","getUserDocument","userDocument","data"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,4BAFO;AAGnBC,EAAAA,SAAS,EAAE,YAHQ;AAInBC,EAAAA,aAAa,EAAE,wBAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE,2CANY;AAOnBC,EAAAA,aAAa,EAAE;AAPI,CAAvB;AAUAT,QAAQ,CAACU,aAAT,CAAuBR,cAAvB;AAEA,OAAO,MAAMS,IAAI,GAAGX,QAAQ,CAACW,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB;AAEP,MAAMC,QAAQ,GAAG,IAAIb,QAAQ,CAACW,IAAT,CAAcG,kBAAlB,EAAjB;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACpCJ,EAAAA,IAAI,CAACK,eAAL,CAAqBH,QAArB;AACD,CAFM;AAIP,OAAO,MAAMI,oBAAoB,GAAG,OAAOC,IAAP,EAAaC,cAAb,KAAgC;AAClE,MAAI,CAACD,IAAL,EAAW;AAEX,QAAME,OAAO,GAAGR,SAAS,CAACS,GAAV,CAAe,SAAQH,IAAI,CAACI,GAAI,EAAhC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,WAAT;AAAsBC,MAAAA;AAAtB,QAAmCV,IAAzC;;AACA,QAAI;AACF,YAAME,OAAO,CAACS,GAAR,CAAY;AAChBF,QAAAA,WADgB;AAEhBD,QAAAA,KAFgB;AAGhBE,QAAAA,QAHgB;AAIhB,WAAGT;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOW,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACD;AACF;;AACD,SAAOE,eAAe,CAACd,IAAI,CAACI,GAAN,CAAtB;AACD,CApBM;;AAsBP,MAAMU,eAAe,GAAG,MAAMV,GAAN,IAAa;AACnC,MAAI,CAACA,GAAL,EAAU,OAAO,IAAP;;AACV,MAAI;AACF,UAAMW,YAAY,GAAG,MAAMrB,SAAS,CAACS,GAAV,CAAe,SAAQC,GAAI,EAA3B,EAA8BE,GAA9B,EAA3B;AAEA,WAAO;AACLF,MAAAA,GADK;AAEL,SAAGW,YAAY,CAACC,IAAb;AAFE,KAAP;AAID,GAPD,CAOE,OAAOJ,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACD;AACF,CAZD","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { functions } from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD6zSLe_Bw-dlV28EMG3kJuY0ctrW1y2-I\",\n    authDomain: \"bits-e46c5.firebaseapp.com\",\n    projectId: \"bits-e46c5\",\n    storageBucket: \"bits-e46c5.appspot.com\",\n    messagingSenderId: \"959583743012\",\n    appId: \"1:959583743012:web:1a9372854ff547559ebcb1\",\n    measurementId: \"G-GCBH9WMNWV\"\n}\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider);\n};\n\nexport const generateUserDocument = async (user, additionalData) => {\n  if (!user) return;\n\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const { email, displayName, photoURL } = user;\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        ...additionalData\n      });\n    } catch (error) {\n      console.error(\"Error creating user document\", error);\n    }\n  }\n  return getUserDocument(user.uid);\n};\n\nconst getUserDocument = async uid => {\n  if (!uid) return null;\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n\n    return {\n      uid,\n      ...userDocument.data()\n    };\n  } catch (error) {\n    console.error(\"Error fetching user\", error);\n  }\n};"]},"metadata":{},"sourceType":"module"}