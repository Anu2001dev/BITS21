{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/chamindu/Desktop/BITS21/src/Components/Tasks/TaskCard.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CodeIcon from '@material-ui/icons/Code';\nimport GestureIcon from '@material-ui/icons/Gesture';\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\nimport taskDetails from '../../Data/tasks.json';\nimport theme from '../../theme';\nimport { Link } from 'react-router-dom';\nimport { render } from '@testing-library/react';\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    width: '600px',\n    height: '200px',\n    marginLeft: '100px',\n    marginTop: '20px',\n    background: 'linear-gradient(329deg, rgb(19 15 62) 0%, rgba(28,56,164,1) 100%)',\n    color: '#fff',\n    borderRadius: '20px'\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  content: {\n    flex: '1 0 auto'\n  },\n  cover: {\n    width: 151\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  },\n  button: {\n    marginLeft: '10px',\n    marginBottom: '10px',\n    background: 'linear-gradient(329deg, rgba(24,77,208,1) 0%, rgba(34,208,215,1) 100%)',\n    color: '#fefefe',\n    transition: '0.5s ease',\n    '&:hover': {\n      background: 'linear-gradient(129deg, rgba(24,77,208,1) 0%, rgba(34,208,215,1) 100%)',\n      color: '#FFF'\n    },\n    color: '#00000'\n  },\n  catogery: {\n    marginLeft: '230px'\n  }\n}));\nexport default function TaskCard() {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [filter, setfilter] = useState(false);\n  console.log(taskDetails);\n  let result = taskDetails;\n\n  function code() {\n    result = result.filter(function (obj, index) {\n      return obj.catogery === 'Code';\n    });\n\n    if (result.length < 3) {\n      render( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: result.map((tasks, index) => /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.root,\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.details,\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              className: classes.content,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                component: \"h5\",\n                variant: \"h5\",\n                children: [tasks.taskName, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: classes.catogery,\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: tasks.catogery,\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      \"aria-label\": tasks.catogery,\n                      color: \"secondary\",\n                      children: (() => {\n                        switch (tasks.catogery) {\n                          case \"Code\":\n                            return /*#__PURE__*/_jsxDEV(CodeIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 94,\n                              columnNumber: 39\n                            }, this);\n\n                          case \"Design\":\n                            return /*#__PURE__*/_jsxDEV(GestureIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 95,\n                              columnNumber: 39\n                            }, this);\n\n                          case \"Explore\":\n                            return /*#__PURE__*/_jsxDEV(FindInPageIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 96,\n                              columnNumber: 41\n                            }, this);\n                        }\n                      })()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                color: theme.text.secondary.main,\n                className: classes.cat,\n                children: tasks.shortDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.controls,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                className: classes.button,\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this));\n    }\n\n    console.log(result);\n  }\n\n  function design() {\n    result = taskDetails.filter(function (obj, index) {\n      return obj.catogery === 'Design';\n    });\n    console.log(result);\n  }\n\n  function explore() {\n    result = taskDetails.filter(function (obj, index) {\n      return obj.catogery === 'Explore';\n    });\n    console.log(result);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: code,\n      children: \"Filter Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: design,\n      children: \"Filter Design\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: explore,\n      children: \"Filter Explore\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskCard, \"vVGTu72gA+CyzchnT+Q+JxFq7o4=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = TaskCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"sources":["/home/chamindu/Desktop/BITS21/src/Components/Tasks/TaskCard.js"],"names":["React","useState","makeStyles","useTheme","Card","CardContent","CardMedia","Typography","Button","Avatar","IconButton","Tooltip","CodeIcon","GestureIcon","FindInPageIcon","taskDetails","theme","Link","render","useStyles","root","display","width","height","marginLeft","marginTop","background","color","borderRadius","details","flexDirection","content","flex","cover","controls","alignItems","paddingLeft","spacing","paddingBottom","button","marginBottom","transition","catogery","TaskCard","classes","filter","setfilter","console","log","result","code","obj","index","length","map","tasks","taskName","text","secondary","main","cat","shortDescription","design","explore"],"mappings":"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","sourcesContent":["import { React, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CodeIcon from '@material-ui/icons/Code';\nimport GestureIcon from '@material-ui/icons/Gesture';\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\nimport taskDetails from '../../Data/tasks.json'\nimport theme from '../../theme'\nimport { Link } from 'react-router-dom';\nimport { render } from '@testing-library/react';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    width: '600px',\n    height: '200px',\n    marginLeft: '100px',\n    marginTop: '20px',\n    background: 'linear-gradient(329deg, rgb(19 15 62) 0%, rgba(28,56,164,1) 100%)',\n    color: '#fff',\n    borderRadius: '20px',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  cover: {\n    width: 151,\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n\n  button: {\n    marginLeft: '10px',\n    marginBottom: '10px',\n    background: 'linear-gradient(329deg, rgba(24,77,208,1) 0%, rgba(34,208,215,1) 100%)',\n    color: '#fefefe',\n    transition: '0.5s ease',\n    '&:hover': {\n      background: 'linear-gradient(129deg, rgba(24,77,208,1) 0%, rgba(34,208,215,1) 100%)',\n      color: '#FFF',\n  },\n  color:'#00000'\n  },\n\n  catogery: {\n    marginLeft: '230px'\n  }\n  \n\n}));\n\nexport default function TaskCard() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [filter, setfilter] = useState(false)\n\n  console.log(taskDetails)\n  let result = taskDetails\n  function code() {\n     result = result.filter(function(obj, index){\n      return obj.catogery==='Code';\n    })\n\n    if (result.length<3) {\n      render (\n        <div>\n        {result.map((tasks, index) => (\n  \n          <Card className={classes.root} color=\"primary\"  key={index}>\n            <div className={classes.details}>\n              <CardContent className={classes.content}>\n                <Typography component=\"h5\" variant=\"h5\">\n                  {tasks.taskName}\n                  <span className={classes.catogery}>\n                  <Tooltip title={tasks.catogery}>\n                    <IconButton aria-label={tasks.catogery} color='secondary'>\n               {(() => {\n              switch (tasks.catogery) {\n                case \"Code\":   return <CodeIcon />;\n                case \"Design\": return <GestureIcon />;\n                case \"Explore\":  return <FindInPageIcon />;\n              }\n            })()}\n                </IconButton>\n                </Tooltip>\n                </span>\n                </Typography>\n                <Typography variant=\"subtitle1\"  color={theme.text.secondary.main} className={classes.cat} >\n                  {tasks.shortDescription}\n                </Typography>\n              </CardContent>\n              \n              <div className={classes.controls}>\n              <Button variant=\"contained\" className={classes.button}>\n                View\n              </Button>\n              \n              </div>\n            </div>\n          </Card>\n          ))}\n          </div>\n      )\n    }\n    \n    \n    console.log(result)\n    \n  }\n\n  function design() {\n     result = taskDetails.filter(function(obj, index){\n      return obj.catogery==='Design';\n    })\n    console.log(result)\n  }\n\n  function explore() {\n     result = taskDetails.filter(function(obj, index){\n      return obj.catogery==='Explore';\n    })\n    console.log(result)\n  }\n\n\n  return (\n    <div>\n      <button onClick={code}>Filter Code</button>\n      <button onClick={design}>Filter Design</button>\n      <button onClick={explore}>Filter Explore</button>\n      {/*{result.map((tasks, index) => (\n\n    <Card className={classes.root} color=\"primary\"  key={index}>\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography component=\"h5\" variant=\"h5\">\n            {tasks.taskName}\n            <span className={classes.catogery}>\n            <Tooltip title={tasks.catogery}>\n              <IconButton aria-label={tasks.catogery} color='secondary'>\n         {(() => {\n        switch (tasks.catogery) {\n          case \"Code\":   return <CodeIcon />;\n          case \"Design\": return <GestureIcon />;\n          case \"Explore\":  return <FindInPageIcon />;\n        }\n      })()}\n          </IconButton>\n          </Tooltip>\n          </span>\n          </Typography>\n          <Typography variant=\"subtitle1\"  color={theme.text.secondary.main} className={classes.cat} >\n            {tasks.shortDescription}\n          </Typography>\n        </CardContent>\n        \n        <div className={classes.controls}>\n        <Button variant=\"contained\" component={Link} to={`/task/${tasks.id}`} className={classes.button}>\n          View\n        </Button>\n        \n        </div>\n      </div>\n    </Card>\n    ))}*/}\n    </div>\n    \n  );\n}\n"]},"metadata":{},"sourceType":"module"}