{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/chamindu/Desktop/BITS21/src/Components/Tasks/TaskCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport data from '../About/data.json';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport CodeIcon from '@material-ui/icons/Code';\nimport GestureIcon from '@material-ui/icons/Gesture';\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\nimport taskDetails from '../../data.json';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    width: '600px',\n    height: '200px',\n    marginLeft: '100px',\n    marginTop: '20px',\n    backgroundColor: theme.palette.getContrastText(theme.backgroundColor),\n    color: '#fff'\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  content: {\n    flex: '1 0 auto'\n  },\n  cover: {\n    width: 151\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  },\n  button: {\n    backgroundColor: '#00adb5',\n    '&:hover': {\n      backgroundColor: '#03959c',\n      color: '#FFF'\n    },\n    color: '#00000'\n  },\n  catogery: {\n    marginLeft: '230px'\n  }\n}));\nexport default function TaskCard() {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: taskDetails.map((tasks, index) => /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h5\",\n            variant: \"h5\",\n            children: [tasks.taskName, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.catogery,\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": tasks.catogery,\n                color: \"secondary\",\n                children: (() => {\n                  switch (tasks.catogery) {\n                    case \"Code\":\n                      return /*#__PURE__*/_jsxDEV(CodeIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 76,\n                        columnNumber: 33\n                      }, this);\n\n                    case \"Design\":\n                      return /*#__PURE__*/_jsxDEV(GestureIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 77,\n                        columnNumber: 33\n                      }, this);\n\n                    case \"Explore\":\n                      return /*#__PURE__*/_jsxDEV(FindInPageIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 78,\n                        columnNumber: 35\n                      }, this);\n                  }\n                })()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            color: \"#ff0000\",\n            className: classes.cat,\n            children: tasks.shortDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.controls,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            href: \"/task\",\n            className: classes.button,\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskCard, \"VtevrTi9kvKTG+vqc/SYVHiEGOM=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = TaskCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"sources":["/home/chamindu/Desktop/BITS21/src/Components/Tasks/TaskCard.js"],"names":["React","makeStyles","useTheme","Card","CardContent","CardMedia","Typography","Button","data","Avatar","IconButton","CodeIcon","GestureIcon","FindInPageIcon","taskDetails","useStyles","theme","root","display","width","height","marginLeft","marginTop","backgroundColor","palette","getContrastText","color","details","flexDirection","content","flex","cover","controls","alignItems","paddingLeft","spacing","paddingBottom","button","catogery","TaskCard","classes","map","tasks","index","taskName","cat","shortDescription"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,mBAAnC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA,MAAMC,SAAS,GAAGd,UAAU,CAAEe,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,KAAK,EAAE,OAFH;AAGJC,IAAAA,MAAM,EAAE,OAHJ;AAIJC,IAAAA,UAAU,EAAE,OAJR;AAKJC,IAAAA,SAAS,EAAE,MALP;AAMJC,IAAAA,eAAe,EAAEP,KAAK,CAACQ,OAAN,CAAcC,eAAd,CAA8BT,KAAK,CAACO,eAApC,CANb;AAOJG,IAAAA,KAAK,EAAE;AAPH,GADiC;AAUvCC,EAAAA,OAAO,EAAE;AACPT,IAAAA,OAAO,EAAE,MADF;AAEPU,IAAAA,aAAa,EAAE;AAFR,GAV8B;AAcvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE;AADC,GAd8B;AAiBvCC,EAAAA,KAAK,EAAE;AACLZ,IAAAA,KAAK,EAAE;AADF,GAjBgC;AAoBvCa,EAAAA,QAAQ,EAAE;AACRd,IAAAA,OAAO,EAAE,MADD;AAERe,IAAAA,UAAU,EAAE,QAFJ;AAGRC,IAAAA,WAAW,EAAElB,KAAK,CAACmB,OAAN,CAAc,CAAd,CAHL;AAIRC,IAAAA,aAAa,EAAEpB,KAAK,CAACmB,OAAN,CAAc,CAAd;AAJP,GApB6B;AA2BvCE,EAAAA,MAAM,EAAE;AACNd,IAAAA,eAAe,EAAE,SADX;AAEN,eAAW;AACTA,MAAAA,eAAe,EAAE,SADR;AAETG,MAAAA,KAAK,EAAE;AAFE,KAFL;AAMRA,IAAAA,KAAK,EAAC;AANE,GA3B+B;AAoCvCY,EAAAA,QAAQ,EAAE;AACRjB,IAAAA,UAAU,EAAE;AADJ;AApC6B,CAAZ,CAAD,CAA5B;AA2CA,eAAe,SAASkB,QAAT,GAAoB;AAAA;;AACjC,QAAMC,OAAO,GAAGzB,SAAS,EAAzB;AACA,QAAMC,KAAK,GAAGd,QAAQ,EAAtB;AAIA,sBACE;AAAA,cACGY,WAAW,CAAC2B,GAAZ,CAAgB,CAACC,KAAD,EAAQC,KAAR,kBAEnB,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEH,OAAO,CAACvB,IAAzB;AAA+B,MAAA,KAAK,EAAC,SAArC;AAAA,6BACE;AAAK,QAAA,SAAS,EAAEuB,OAAO,CAACb,OAAxB;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEa,OAAO,CAACX,OAAhC;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAC,IAAtB;AAA2B,YAAA,OAAO,EAAC,IAAnC;AAAA,uBACGa,KAAK,CAACE,QADT,eAEE;AAAM,cAAA,SAAS,EAAEJ,OAAO,CAACF,QAAzB;AAAA,qCAAmC,QAAC,UAAD;AAAY,8BAAYI,KAAK,CAACJ,QAA9B;AAAwC,gBAAA,KAAK,EAAC,WAA9C;AAAA,0BACrC,CAAC,MAAM;AACT,0BAAQI,KAAK,CAACJ,QAAd;AACE,yBAAK,MAAL;AAAe,0CAAO,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,8BAAP;;AACf,yBAAK,QAAL;AAAe,0CAAO,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,8BAAP;;AACf,yBAAK,SAAL;AAAiB,0CAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,8BAAP;AAHnB;AAKD,iBANG;AADqC;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,WAApB;AAAgC,YAAA,KAAK,EAAC,SAAtC;AAAgD,YAAA,SAAS,EAAEE,OAAO,CAACK,GAAnE;AAAA,sBACGH,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAmBE;AAAK,UAAA,SAAS,EAAEN,OAAO,CAACR,QAAxB;AAAA,iCACA,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,IAAI,EAAC,OAAjC;AAAyC,YAAA,SAAS,EAAEQ,OAAO,CAACH,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAAqDM,KAArD;AAAA;AAAA;AAAA;AAAA,YAFG;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GA1CuBJ,Q;UACNxB,S,EACFb,Q;;;KAFQqC,Q","sourcesContent":["import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport data from '../About/data.json'\nimport { Avatar, IconButton } from '@material-ui/core';\nimport CodeIcon from '@material-ui/icons/Code';\nimport GestureIcon from '@material-ui/icons/Gesture';\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\nimport taskDetails from '../../data.json'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    width: '600px',\n    height: '200px',\n    marginLeft: '100px',\n    marginTop: '20px',\n    backgroundColor: theme.palette.getContrastText(theme.backgroundColor),\n    color: '#fff',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  cover: {\n    width: 151,\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n\n  button: {\n    backgroundColor: '#00adb5',\n    '&:hover': {\n      backgroundColor: '#03959c',\n      color: '#FFF'\n  },\n  color:'#00000'\n  },\n\n  catogery: {\n    marginLeft: '230px'\n  }\n  \n\n}));\n\nexport default function TaskCard() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  \n\n  return (\n    <div>\n      {taskDetails.map((tasks, index) => (\n\n    <Card className={classes.root} color=\"primary\"  key={index}>\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography component=\"h5\" variant=\"h5\">\n            {tasks.taskName}\n            <span className={classes.catogery}><IconButton aria-label={tasks.catogery} color='secondary'>\n         {(() => {\n        switch (tasks.catogery) {\n          case \"Code\":   return <CodeIcon />;\n          case \"Design\": return <GestureIcon />;\n          case \"Explore\":  return <FindInPageIcon />;\n        }\n      })()}\n          </IconButton></span>\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"#ff0000\" className={classes.cat} >\n            {tasks.shortDescription}\n          </Typography>\n        </CardContent>\n        \n        <div className={classes.controls}>\n        <Button variant=\"contained\" href=\"/task\" className={classes.button}>\n          View\n        </Button>\n        \n        </div>\n      </div>\n    </Card>\n    ))}\n    </div>\n    \n  );\n}\n"]},"metadata":{},"sourceType":"module"}